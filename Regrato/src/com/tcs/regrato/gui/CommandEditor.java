/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tcs.regrato.gui;

import com.tcs.regrato.event.ButtonHandler;
import com.tcs.regrato.event.MenuHandler;
import com.tcs.regrato.event.WindowEventHandler;
import com.tcs.regrato.modal.CommandEditorModal;
import com.tcs.regrato.resources.AppIcon;
import com.tcs.regrato.util.Comman;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicTabbedPaneUI;


/**
 *
 * @author 1299792
 */
public class CommandEditor extends javax.swing.JFrame {

    /**
     * Creates new form CommandEditor
     */
    CommandEditorModal commandModal;
    public CommandEditor() {
         this.commandModal = CommandEditorModal.getCommandEditorModal();
   
        initComponents();
        setEvent();
        setProperty();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu2 = new javax.swing.JMenu();
        jTabbedPaneCommandEditor = new javax.swing.JTabbedPane();
        jLabelCommandFileNamed = new javax.swing.JLabel();
        jLabelCommandFileName = new javax.swing.JLabel();
        jToggleButtonHostOnlt = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldDescription = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemNewCommand = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenuItemSaveAs = new javax.swing.JMenuItem();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemOpenTrace = new javax.swing.JMenuItem();
        jMenuItemCloseTrace = new javax.swing.JMenuItem();
        jMenuItemAppendRow = new javax.swing.JMenuItem();
        jMenuItemAppendAtTop = new javax.swing.JMenuItem();
        jMenuItemAppendAt = new javax.swing.JMenuItem();
        jMenuRun = new javax.swing.JMenu();
        jMenuItemRunCommand = new javax.swing.JMenuItem();

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Command Editor");

        jTabbedPaneCommandEditor.setName("TraceHolder"); // NOI18N

        jLabelCommandFileNamed.setText("Command File:");

        jLabelCommandFileName.setText(" ");

        jToggleButtonHostOnlt.setText("HOST ONLY");
        jToggleButtonHostOnlt.setEnabled(false);

        jLabel1.setText("Description    :");

        jMenu1.setText("File");

        jMenuItemNewCommand.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNewCommand.setText("New Command");
        jMenu1.add(jMenuItemNewCommand);

        jMenuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSave.setText("Save");
        jMenu1.add(jMenuItemSave);

        jMenuItemSaveAs.setText("Save As");
        jMenu1.add(jMenuItemSaveAs);

        jMenuBar1.add(jMenu1);

        jMenuFile.setText("Edit");

        jMenuItemOpenTrace.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOpenTrace.setText("Open Trace");
        jMenuFile.add(jMenuItemOpenTrace);

        jMenuItemCloseTrace.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemCloseTrace.setText("Close Trace");
        jMenuFile.add(jMenuItemCloseTrace);

        jMenuItemAppendRow.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemAppendRow.setText("Append At Bottom Row");
        jMenuFile.add(jMenuItemAppendRow);

        jMenuItemAppendAtTop.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemAppendAtTop.setText("Append At Top Row");
        jMenuFile.add(jMenuItemAppendAtTop);

        jMenuItemAppendAt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemAppendAt.setText("Append At nth Row");
        jMenuFile.add(jMenuItemAppendAt);

        jMenuBar1.add(jMenuFile);

        jMenuRun.setText("Run");

        jMenuItemRunCommand.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemRunCommand.setText("Run Command");
        jMenuRun.add(jMenuItemRunCommand);

        jMenuBar1.add(jMenuRun);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPaneCommandEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelCommandFileNamed, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelCommandFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButtonHostOnlt)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCommandFileNamed)
                            .addComponent(jLabelCommandFileName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jToggleButtonHostOnlt, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPaneCommandEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCommandFileName;
    private javax.swing.JLabel jLabelCommandFileNamed;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemAppendAt;
    private javax.swing.JMenuItem jMenuItemAppendAtTop;
    private javax.swing.JMenuItem jMenuItemAppendRow;
    private javax.swing.JMenuItem jMenuItemCloseTrace;
    private javax.swing.JMenuItem jMenuItemNewCommand;
    private javax.swing.JMenuItem jMenuItemOpenTrace;
    private javax.swing.JMenuItem jMenuItemRunCommand;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenuItem jMenuItemSaveAs;
    private javax.swing.JMenu jMenuRun;
    private javax.swing.JTabbedPane jTabbedPaneCommandEditor;
    private javax.swing.JTextField jTextFieldDescription;
    private javax.swing.JToggleButton jToggleButtonHostOnlt;
    // End of variables declaration//GEN-END:variables
    
private void setEvent(){
   MenuHandler menuHandle = new MenuHandler();
   WindowEventHandler windowHandler = new WindowEventHandler();
    ButtonHandler buttonHandler = new ButtonHandler();
   this.addWindowListener(windowHandler);
   this.jMenuItemOpenTrace.setActionCommand("openTrace");
   this.jMenuItemSave.setActionCommand("saveCommand");
   this.jMenuItemSaveAs.setActionCommand("saveAsCommand");
   this.jMenuItemAppendRow.setActionCommand("appendRow");
   this.jMenuItemAppendAtTop.setActionCommand("appendRowTop");
   this.jMenuItemCloseTrace.setActionCommand("closeCommandEditor");
   this.jMenuItemAppendAt.setActionCommand("appendAt");
   this.jMenuItemNewCommand.setActionCommand("newCommandEdit");
   this.jMenuItemRunCommand.setActionCommand("runCommand");
   this.jToggleButtonHostOnlt.setActionCommand("addSeamIsHost");
   this.jMenuItemOpenTrace.addActionListener(menuHandle);
   this.jMenuItemSave.addActionListener(menuHandle);
   this.jMenuItemAppendRow.addActionListener(menuHandle);
   this.jMenuItemAppendAtTop.addActionListener(menuHandle);
   this.jMenuItemCloseTrace.addActionListener(menuHandle);
   this.jMenuItemAppendAt.addActionListener(menuHandle);
   this.jMenuItemNewCommand.addActionListener(menuHandle);
   this.jMenuItemRunCommand.addActionListener(menuHandle);
   this.jMenuItemSaveAs.addActionListener(menuHandle);
   this.jToggleButtonHostOnlt.addActionListener(buttonHandler);
   
   
   jTabbedPaneCommandEditor.addMouseListener(new java.awt.event.MouseAdapter() {
       @Override
       public void mouseClicked(MouseEvent e) {
            int index =  jTabbedPaneCommandEditor.indexAtLocation(e.getX(), e.getY());
            System.out.println(index);
          if (e.getClickCount()==2 ) {
               
                //System.out.println(index);
                JTextField field = new JTextField();              
                field.setText(jTabbedPaneCommandEditor.getTitleAt(index));
                field.setEditable(true);
                field.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseExited(MouseEvent e) {

                      String textInField = field.getText();
//                       System.out.println(textInField);
                       if(textInField.equals("") || textInField.matches("[\\s]+")){
                           JOptionPane.showMessageDialog(null, "Cannot be empty or spaces","Invalid",JOptionPane.ERROR_MESSAGE);
                           return;
                       }else{
                          jTabbedPaneCommandEditor.setTitleAt(index, textInField);
                          jTabbedPaneCommandEditor.setTabComponentAt(index,null);
                          field.removeMouseListener(this);
                          jTabbedPaneCommandEditor.revalidate();
                          commandModal.setMainTabedPaneOfCommandEditor(jTabbedPaneCommandEditor);
                       }


                    }
                    
                     
                     
                });
//                field=null;
                
                jTabbedPaneCommandEditor.setTabComponentAt(index, field);
                commandModal.setMainTabedPaneOfCommandEditor(jTabbedPaneCommandEditor);
             }
//          System.out.println(e.getButton());
               if(e.getButton()==MouseEvent.BUTTON3){
                   final JPopupMenu menu = new JPopupMenu("Tabbed Menu");
                   JMenuItem del = new JMenuItem("Delete Tab");
                   del.addActionListener(new ActionListener() {
                       @Override
                       public void actionPerformed(ActionEvent e) {
                         JTabbedPane p=new Comman().getJTabbedPaneFromEventForMenu(e);
                         int index = p.getSelectedIndex();
                         jTabbedPaneCommandEditor.removeTabAt(index);
                         commandModal.setMainTabedPaneOfCommandEditor(jTabbedPaneCommandEditor);
                       }
                   });
                   menu.add(del);
                   jTabbedPaneCommandEditor.setComponentPopupMenu(menu);
                   commandModal.setMainTabedPaneOfCommandEditor(jTabbedPaneCommandEditor);
               }
       }
     
   
        });
   
   
   
}

private void setProperty(){

      setIconImage(new AppIcon().getAppIcon());
//   this.jTabbedPaneCommandEditor.setName("JTabbed Pane");
   this.jMenuItemAppendRow.setVisible(false);
   this.jMenuItemAppendAtTop.setVisible(false);
   this.jMenuItemAppendAt.setVisible(false);
    this.jTabbedPaneCommandEditor.setUI(new MyTabbedPaneUI(jTabbedPaneCommandEditor));
   this.commandModal.setMainTabedPaneOfCommandEditor(this.jTabbedPaneCommandEditor);
   this.commandModal.setCommandEditorJFrame(this);
   this.commandModal.setCommandFileNamedLabel(this.jLabelCommandFileNamed);
   this.commandModal.setCommandFileLabel(this.jLabelCommandFileName);
   this.commandModal.setAppendRowMenuItem(jMenuItemAppendRow);
   this.commandModal.setAppendRowAtTopMenuItem(this.jMenuItemAppendAtTop);
   this.commandModal.setAppendRowAtMenuItem(jMenuItemAppendAt);
   this.commandModal.setHostOnly(jToggleButtonHostOnlt);
   this.commandModal.setDescription(this.jTextFieldDescription);
//  this.commandModal.setCommandEditorTable(jTableCommandEditor);
}
}
